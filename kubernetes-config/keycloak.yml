kind: Deployment
apiVersion: apps/v1
metadata:
  name: keycloak
  namespace: default
  labels:
    keykloak: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: keycloak
    spec:
      volumes:
        - name: realm-volume
          configMap:
            name: keycloak-realm
            defaultMode: 420
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: keycloak
          command:
            - sh
            - '-c'
            - >-
              /opt/keycloak/bin/kc.sh start --import-realm
              --https-cipher-suites=ALL
          env:
            - name: KEYCLOAK_USER
              value: admin
            - name: KEYCLOAK_PASSWORD
              value: admin
            - name: KEYCLOAK_IMPORT
              value: 'true'
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL_HOST
              value: postgres-service
            - name: KC_DB_URL_PORT
              value: '5432'
            - name: KC_DB_DATABASE
              value: appdb
            - name: KC_DB_USERNAME
              value: appuser
            - name: KC_DB_PASSWORD
              value: apppassword
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: realm-volume
              mountPath: /opt/keycloak/data/import/realm.json
              subPath: realm.json
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: redhat-secret
          image: 'quay.io/keycloak/keycloak:20.0.3'
        - name: keycloak-ssl
          image: busybox
          command:
            - sleep
            - infinity
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

